services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mma-platform-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=${DB_USERNAME:-postgres}
      - DATABASE_PASSWORD=${DB_PASSWORD:-admin}
      - DATABASE_NAME=${DB_NAME:-mma_platform}
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mma-network
    restart: unless-stopped
    # For development, uncomment the following lines
    # volumes:
    #   - .:/app
    #   - /app/node_modules

  postgres:
    image: postgres:14-alpine
    container_name: mma-platform-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-admin}
      - POSTGRES_DB=${DB_NAME:-mma_platform}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-sql:/docker-entrypoint-initdb.d
    networks:
      - mma-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-mma_platform}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Optional: Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    container_name: mma-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mma-network
    restart: unless-stopped
    profiles:
      - cache

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mma-platform-pgadmin
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@mma-platform.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mma-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mma-network:
    driver: bridge